(ns smeghead\tests\pdo-initail
  (:require phel\test :refer [deftest is])
  (:require smeghead\pdo)
  (:require smeghead\pdo\statement))

(deftest test-initial
  (let [conn (pdo/connect "sqlite::memory:")]
    (is (struct? conn))
    (is (not= nil conn))))

(deftest test-simple-table-definition
  (let [conn (pdo/connect "sqlite::memory:")]
    (is (= 0 (pdo/exec
               conn
               "create table t1 (id integer primary key autoincrement, name varchr(10))")))
    (is (= 1 (pdo/exec
               conn
               "insert into t1 (name) values ('phel')")))
    (let [stmt (pdo/query conn "select * from t1 where id = 1")]
      (is (= {"id" 1 "name" "phel"} (statement/fetch stmt))))))

(deftest test-simple-rollback
  (let [conn (pdo/connect "sqlite::memory:")]
    (is (= 0 (pdo/exec
               conn
               "create table t1 (id integer primary key autoincrement, name varchr(10))")))
    (is (pdo/begin conn))
    (is (= 1 (pdo/exec
               conn
               "insert into t1 (name) values ('phel')")))
    (is (pdo/rollback conn))
    (let [stmt (pdo/query conn "select count(*) from t1 where id = 1")]
      (is (= 0 (statement/fetch-column stmt))))))

(deftest test-simple-commit
  (let [conn (pdo/connect "sqlite::memory:")]
    (is (= 0 (pdo/exec
               conn
               "create table t1 (id integer primary key autoincrement, name varchr(10))")))
    (is (pdo/begin conn))
    (is (= 1 (pdo/exec
               conn
               "insert into t1 (name) values ('phel')")))
    (is (pdo/commit conn))
    (let [stmt (pdo/query conn "select count(*) from t1 where id = 1")]
      (is (= 1 (statement/fetch-column stmt))))))
